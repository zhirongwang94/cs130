{"ast":null,"code":"import _regeneratorRuntime from\"/Users/calvinyung/Desktop/Fall 2020/cs130/project/cs130/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/calvinyung/Desktop/Fall 2020/cs130/project/cs130/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/calvinyung/Desktop/Fall 2020/cs130/project/cs130/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/calvinyung/Desktop/Fall 2020/cs130/project/cs130/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import{Plugins}from\"@capacitor/core\";import{SMS}from'@ionic-native/sms';var Contacts=Plugins.Contacts;//MAke this class singleton?\nvar Singleton=function(){var instance;function createInstance(){var ct=new ContactTracing();return ct;}return{getInstance:function getInstance(){if(!instance){instance=createInstance();}return instance;}};}();var ContactTracing=/*#__PURE__*/function(){function ContactTracing(){_classCallCheck(this,ContactTracing);this.contacts=[];this.selected=[];this.conIndex=[];this.sms=new SMS();this.symptomList=[{val:\"Cough\",isChecked:false},{val:\"Fever or chills\",isChecked:false},{val:\"Shortness of breath or difficulty breathing\",isChecked:false},{val:\"Fatigue\",isChecked:false},{val:\"Muscle or body aches\",isChecked:false},{val:\"Headaches\",isChecked:false},{val:\"New loss of taste or smell\",isChecked:false},{val:\"Sore throat\",isChecked:false},{val:\"Congestion or runny nose\",isChecked:false},{val:\"Nausea or vomiting\",isChecked:false},{val:\"Diarrhea\",isChecked:false}];this.emergencyList=[{val:\"Trouble breathing\",isChecked:false},{val:\"Persistent pain or pressure in chest\",isChecked:false},{val:\"New confusion\",isChecked:false},{val:\"Inability to wake or stay awake\",isChecked:false},{val:\"Bluish lips or face\",isChecked:false}];this.loadContacts();this.sms=new SMS();}_createClass(ContactTracing,[{key:\"getEmergencyList\",value:function getEmergencyList(){return this.emergencyList;}},{key:\"getSymptomsList\",value:function getSymptomsList(){return this.symptomList;}},{key:\"getContactIndex\",value:function getContactIndex(){return this.conIndex;}},{key:\"checkSymptom\",value:function checkSymptom(i){if(i<this.symptomList.length){this.symptomList[i].isChecked=!this.symptomList[i].isChecked;}}},{key:\"checkEmergency\",value:function checkEmergency(i){if(i<this.emergencyList.length){this.emergencyList[i].isChecked=!this.emergencyList[i].isChecked;}}//Updates list of \n},{key:\"check\",value:function check(i){if(i<this.conIndex.length){this.conIndex[i]=!this.conIndex[i];}}//Getter method for all device contacts\n//Void input\n//Returns list of Contact objects\n},{key:\"getContacts\",value:function getContacts(){console.log('GRABBING CONTACT LIST FROM OBJECT\\n');//console.log(this.contacts);\nreturn this.contacts;}//Getter method for selected device contacts\n//Void input\n//Returns list of Contact objects\n},{key:\"getSelected\",value:function getSelected(){return this.selected;}},{key:\"sendMessage\",value:function sendMessage(){for(var i=0;i<this.contacts.length;i++){if(this.conIndex[i]){this.selected.push(this.contacts[i]);}}console.log(\"SELECTED CONTACTS\");console.log(this.selected);this.sendSms();}},{key:\"select\",value:function select(i){if(i>=0){if(i<this.contacts.length){this.conIndex[i]=!this.conIndex[i];}}}},{key:\"loadContacts\",value:function(){var _loadContacts=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _this=this;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:Contacts.getContacts().then(function(results){_this.contacts=results.contacts;console.log(_this.contacts);for(var i=0;i<_this.contacts.length;i++){_this.conIndex.push(false);}});case 1:case\"end\":return _context.stop();}}},_callee);}));function loadContacts(){return _loadContacts.apply(this,arguments);}return loadContacts;}()// private onSuccess(contacts:Contact[]){\n//   console.log(contacts.length + ' contacts found');\n//   for(var i = 0; i < contacts.length; i++) {\n//     console.log(contacts[i].contactId + \" - \" + contacts[i].displayName);\n//     for(var j = 0; j < contacts[i].phoneNumbers.length; j++) {\n//        var phone = contacts[i].phoneNumbers[j];\n//        console.log(\"===> \" + phone + \"\\n\");\n//     }\n//  }\n// }\n// private onError(error:string){\n//   console.log(\"Error grabbing contacts! \" + error);\n// }\n},{key:\"sendSms\",value:function sendSms(){var message=\"\";message+=\"------------------------------\\nIF EXPERIENCING SEEK IMMEDIATE MEDICAL ATTENTION!\\n\";for(var index in this.emergencyList){if(this.emergencyList[index].isChecked){message+=this.emergencyList[index].val+\"\\n\";}}message+=\"------------------------------\\nNon-Emergency Symptoms:\\n\";for(var index in this.symptomList){if(this.symptomList[index].isChecked){message+=this.symptomList[index].val+\"\\n\";}}//alert(\"Symptoms List \\n\" + message);\nthis.sms.send('5167120628',\"test sms\");//alert(\"sendSms was called!\");\n}}]);return ContactTracing;}();export default Singleton;","map":{"version":3,"sources":["/Users/calvinyung/Desktop/Fall 2020/cs130/project/cs130/src/pages/ContactTracing.tsx"],"names":["Plugins","SMS","Contacts","Singleton","instance","createInstance","ct","ContactTracing","getInstance","contacts","selected","conIndex","sms","symptomList","val","isChecked","emergencyList","loadContacts","i","length","console","log","push","sendSms","getContacts","then","results","message","index","send"],"mappings":"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","sourcesContent":["import { Contact } from \"@capacitor-community/contacts\";\nimport { Plugins } from \"@capacitor/core\";\nimport { SMS } from '@ionic-native/sms';\nconst  { Contacts } = Plugins;\n\n//MAke this class singleton?\n\nvar Singleton = (function () {\n  let instance:ContactTracing;\n\n  function createInstance() {\n      var ct = new ContactTracing();\n      return ct;\n  }\n\n  return {\n      getInstance: function () {\n          if (!instance) {\n              instance = createInstance();\n          }\n          return instance;\n      }\n  };\n})();\n\n class ContactTracing {\n  private contacts:Contact[] = [];\n  private selected:Contact[] = [];\n  private conIndex:boolean[] = [];\n  private sms = new SMS();\n\n  private symptomList = [\n    {val: \"Cough\", isChecked: false},\n    {val: \"Fever or chills\", isChecked: false},\n    {val: \"Shortness of breath or difficulty breathing\", isChecked: false},\n    {val: \"Fatigue\", isChecked: false},\n    {val: \"Muscle or body aches\", isChecked: false},\n    {val: \"Headaches\", isChecked: false},\n    {val: \"New loss of taste or smell\", isChecked: false},\n    {val: \"Sore throat\", isChecked: false},\n    {val: \"Congestion or runny nose\", isChecked: false},\n    {val: \"Nausea or vomiting\", isChecked: false},\n    {val: \"Diarrhea\", isChecked: false}\n  ]\n  \n  private emergencyList = [\n    {val: \"Trouble breathing\", isChecked: false},\n    {val: \"Persistent pain or pressure in chest\", isChecked: false},\n    {val: \"New confusion\", isChecked: false},\n    {val: \"Inability to wake or stay awake\", isChecked: false},\n    {val: \"Bluish lips or face\", isChecked: false}\n  ]\n\n  public constructor(){\n    this.loadContacts();\n    this.sms = new SMS();\n  }\n\n  public getEmergencyList(){\n    return this.emergencyList;\n  }\n\n  public getSymptomsList(){\n    return this.symptomList;\n  }\n\n  public getContactIndex(){\n    return this.conIndex;\n  }\n\n  public checkSymptom(i:number){\n    if(i < this.symptomList.length){\n      this.symptomList[i].isChecked = !(this.symptomList[i].isChecked);\n    }\n  }\n  public checkEmergency(i:number){\n    if(i < this.emergencyList.length){\n      this.emergencyList[i].isChecked = !(this.emergencyList[i].isChecked);\n    }\n  }\n  \n  //Updates list of \n  public check(i:number){\n    if(i < this.conIndex.length){\n      this.conIndex[i] = !(this.conIndex[i]);\n    }\n  }\n  \n  //Getter method for all device contacts\n  //Void input\n  //Returns list of Contact objects\n  public getContacts(){\n    console.log('GRABBING CONTACT LIST FROM OBJECT\\n');\n    //console.log(this.contacts);\n    return this.contacts;\n  }\n\n  //Getter method for selected device contacts\n  //Void input\n  //Returns list of Contact objects\n  public getSelected(){\n    return this.selected;\n  }\n\n\n  public sendMessage(){\n    for(var i = 0; i<this.contacts.length; i++){\n      if(this.conIndex[i]){\n        this.selected.push(this.contacts[i]);\n      }\n    }\n\n    console.log(\"SELECTED CONTACTS\");\n    console.log(this.selected);\n    this.sendSms();\n  }\n\n\n\n  public select(i:number){\n    if(i >= 0){\n      if(i < this.contacts.length){\n        this.conIndex[i] = !(this.conIndex[i]);\n      }\n    }\n  }\n\n  private async loadContacts(){\n    Contacts.getContacts().then(results => {\n    this.contacts = results.contacts;\n    console.log(this.contacts);\n\n    for(var i = 0; i < this.contacts.length; i++){\n      this.conIndex.push(false);\n    }\n    });\n  }\n\n  // private onSuccess(contacts:Contact[]){\n  //   console.log(contacts.length + ' contacts found');\n  //   for(var i = 0; i < contacts.length; i++) {\n  //     console.log(contacts[i].contactId + \" - \" + contacts[i].displayName);\n  //     for(var j = 0; j < contacts[i].phoneNumbers.length; j++) {\n  //        var phone = contacts[i].phoneNumbers[j];\n  //        console.log(\"===> \" + phone + \"\\n\");\n  //     }\n  //  }\n  // }\n\n  // private onError(error:string){\n  //   console.log(\"Error grabbing contacts! \" + error);\n  // }\n\n\n\n\n\n  \n  private sendSms(){\n    \n    var message:String = \"\";\n    \n    message += \"------------------------------\\nIF EXPERIENCING SEEK IMMEDIATE MEDICAL ATTENTION!\\n\";\n    for(var index in this.emergencyList){\n      if(this.emergencyList[index].isChecked){\n        message += this.emergencyList[index].val + \"\\n\";\n      }\n    }\n\n    message += \"------------------------------\\nNon-Emergency Symptoms:\\n\";\n    for(var index in this.symptomList){\n      if(this.symptomList[index].isChecked){\n        message += this.symptomList[index].val + \"\\n\";\n      }\n    }\n\n    //alert(\"Symptoms List \\n\" + message);\n    this.sms.send('5167120628', \"test sms\");\n    //alert(\"sendSms was called!\");\n  }\n\n\n}\nexport default Singleton;"]},"metadata":{},"sourceType":"module"}