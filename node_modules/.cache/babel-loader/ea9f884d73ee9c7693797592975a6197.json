{"ast":null,"code":"var _jsxFileName = \"/Users/calvinyung/Desktop/Fall 2020/cs130/project/cs130/src/pages/Tab3.tsx\";\n// IONSLIDES FOR TABS?\n// ionChange\tEmitted when the checked property has changed.\nimport React, { useState } from 'react';\nimport { IonAlert, IonButton, IonContent, IonHeader, IonPage, IonTitle, IonToolbar, IonCheckbox, IonList, IonItem, IonLabel, IonItemDivider } from '@ionic/react';\nimport './Tab3.css';\nconst symptomList = [{\n  val: \"Cough\",\n  isChecked: false\n}, {\n  val: \"Fever or chills\",\n  isChecked: false\n}, {\n  val: \"Shortness of breath or difficulty breathing\",\n  isChecked: false\n}, {\n  val: \"Fatigue\",\n  isChecked: false\n}, {\n  val: \"Muscle or body aches\",\n  isChecked: false\n}, {\n  val: \"Headaches\",\n  isChecked: false\n}, {\n  val: \"New loss of taste or smell\",\n  isChecked: false\n}, {\n  val: \"Sore throat\",\n  isChecked: false\n}, {\n  val: \"Congestion or runny nose\",\n  isChecked: false\n}, {\n  val: \"Nausea or vomiting\",\n  isChecked: false\n}, {\n  val: \"Diarrhea\",\n  isChecked: false\n}];\nconst emergencyList = [{\n  val: \"Trouble breathing\",\n  isChecked: false\n}, {\n  val: \"Persistent pain or pressure in chest\",\n  isChecked: false\n}, {\n  val: \"New confusion\",\n  isChecked: false\n}, {\n  val: \"Inability to wake or stay awake\",\n  isChecked: false\n}, {\n  val: \"Bluish lips or face\",\n  isChecked: false\n}]; // var app = {\n//   sendSms: function() {\n//       var number = document.getElementById('numberTxt').value.toString(); /* iOS: ensure number is actually a string */\n//       var message = document.getElementById('messageTxt').value;\n//       console.log(\"number=\" + number + \", message= \" + message);\n//       //CONFIGURATION\n//       var options = {\n//           replaceLineBreaks: false, // true to replace \\n by a new line, false by default\n//           android: {\n//               intent: 'INTENT'  // send SMS with the native android SMS messaging\n//               //intent: '' // send SMS without opening any other app, require : android.permission.SEND_SMS and android.permission.READ_PHONE_STATE\n//           }\n//       };\n//       var success = function () { alert('Message sent successfully'); };\n//       var error = function (e) { alert('Message Failed:' + e); };\n//       sms.send(number, message, options, success, error);\n//   }\n// };\n\nconst [showAlert1, setShowAlert1] = useState(false);\nvar app = {\n  sendSms: function () {}\n};\n\nconst Tab3 = () => {\n  const [checked, setChecked] = useState(false);\n  return /*#__PURE__*/React.createElement(IonPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, \"Check Symptoms Experienced\"))), /*#__PURE__*/React.createElement(IonContent, {\n    fullscreen: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonItemDivider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \"EMERGENCY WARNING SIGNS - IF EXPERIENCING SEEK IMMEDIATE MEDICAL ATTENTION\"), emergencyList.map(({\n    val,\n    isChecked\n  }, i) => /*#__PURE__*/React.createElement(IonItem, {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, val), /*#__PURE__*/React.createElement(IonCheckbox, {\n    slot: \"end\",\n    value: val,\n    checked: isChecked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(IonList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonItemDivider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, \"Symptoms exprienced 2-14 days after exposure\"), symptomList.map(({\n    val,\n    isChecked\n  }, i) => /*#__PURE__*/React.createElement(IonItem, {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, val), /*#__PURE__*/React.createElement(IonCheckbox, {\n    slot: \"end\",\n    value: val,\n    checked: isChecked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(IonButton, {\n    onClick: () => app.sendSms(),\n    expand: \"block\",\n    shape: \"round\",\n    color: \"dark\",\n    fill: \"solid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, \"Send Messages\"), /*#__PURE__*/React.createElement(IonAlert, {\n    isOpen: showAlert1,\n    onDidDismiss: () => setShowAlert1(false),\n    cssClass: \"my-custom-class\",\n    header: 'Test Alert',\n    subHeader: 'Subtitle',\n    message: 'function has executed.',\n    buttons: ['OK'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  })));\n};\n\nexport default Tab3;","map":{"version":3,"sources":["/Users/calvinyung/Desktop/Fall 2020/cs130/project/cs130/src/pages/Tab3.tsx"],"names":["React","useState","IonAlert","IonButton","IonContent","IonHeader","IonPage","IonTitle","IonToolbar","IonCheckbox","IonList","IonItem","IonLabel","IonItemDivider","symptomList","val","isChecked","emergencyList","showAlert1","setShowAlert1","app","sendSms","Tab3","checked","setChecked","map","i"],"mappings":"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","sourcesContent":["// IONSLIDES FOR TABS?\n// ionChange\tEmitted when the checked property has changed.\n\nimport React, { useState } from 'react';\nimport { IonAlert, IonButton, IonIcon, IonContent, IonHeader, IonPage, IonTitle, IonToolbar, IonCheckbox, IonList, IonItem, IonLabel, IonItemDivider  } from '@ionic/react';\nimport { SMS } from '@ionic-native/sms';\nimport ExploreContainer from '../components/ExploreContainer';\nimport './Tab3.css';\nimport { scryRenderedDOMComponentsWithClass } from 'react-dom/test-utils';\n\n\nconst symptomList = [\n  {val: \"Cough\", isChecked: false},\n  {val: \"Fever or chills\", isChecked: false},\n  {val: \"Shortness of breath or difficulty breathing\", isChecked: false},\n  {val: \"Fatigue\", isChecked: false},\n  {val: \"Muscle or body aches\", isChecked: false},\n  {val: \"Headaches\", isChecked: false},\n  {val: \"New loss of taste or smell\", isChecked: false},\n  {val: \"Sore throat\", isChecked: false},\n  {val: \"Congestion or runny nose\", isChecked: false},\n  {val: \"Nausea or vomiting\", isChecked: false},\n  {val: \"Diarrhea\", isChecked: false}\n]\n\nconst emergencyList = [\n  {val: \"Trouble breathing\", isChecked: false},\n  {val: \"Persistent pain or pressure in chest\", isChecked: false},\n  {val: \"New confusion\", isChecked: false},\n  {val: \"Inability to wake or stay awake\", isChecked: false},\n  {val: \"Bluish lips or face\", isChecked: false}\n]\n\n\n\n// var app = {\n//   sendSms: function() {\n//       var number = document.getElementById('numberTxt').value.toString(); /* iOS: ensure number is actually a string */\n//       var message = document.getElementById('messageTxt').value;\n//       console.log(\"number=\" + number + \", message= \" + message);\n\n//       //CONFIGURATION\n//       var options = {\n//           replaceLineBreaks: false, // true to replace \\n by a new line, false by default\n//           android: {\n//               intent: 'INTENT'  // send SMS with the native android SMS messaging\n//               //intent: '' // send SMS without opening any other app, require : android.permission.SEND_SMS and android.permission.READ_PHONE_STATE\n//           }\n//       };\n\n//       var success = function () { alert('Message sent successfully'); };\n//       var error = function (e) { alert('Message Failed:' + e); };\n//       sms.send(number, message, options, success, error);\n//   }\n// };\nconst [showAlert1, setShowAlert1] = useState(false);\n\nvar app = {\n  sendSms: function() {\n    \n  }\n}\n\nconst Tab3: React.FC = () => {\n  const [checked, setChecked] = useState(false);\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>Check Symptoms Experienced</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent fullscreen>\n      <IonList>\n          <IonItemDivider>EMERGENCY WARNING SIGNS - IF EXPERIENCING SEEK IMMEDIATE MEDICAL ATTENTION</IonItemDivider>\n          {emergencyList.map(({ val, isChecked }, i) => (\n            <IonItem key={i}>\n              <IonLabel>{val}</IonLabel>\n              <IonCheckbox slot=\"end\" value={val} checked={isChecked} />\n            </IonItem>\n          ))}\n      </IonList>\n      <IonList>\n          <IonItemDivider>Symptoms exprienced 2-14 days after exposure</IonItemDivider>\n          {symptomList.map(({ val, isChecked }, i) => (\n            <IonItem key={i}>\n              <IonLabel>{val}</IonLabel>\n              <IonCheckbox slot=\"end\" value={val} checked={isChecked} />\n            </IonItem>\n          ))}\n      </IonList>\n\n      <IonButton onClick={() => app.sendSms()} expand=\"block\" shape=\"round\"  color=\"dark\" fill=\"solid\">\n        Send Messages\n      </IonButton>\n      <IonAlert\n          isOpen={showAlert1}\n          onDidDismiss={() => setShowAlert1(false)}\n          cssClass='my-custom-class'\n          header={'Test Alert'}\n          subHeader={'Subtitle'}\n          message={'function has executed.'}\n          buttons={['OK']}\n        />\n      \n      </IonContent>\n\n    </IonPage>\n  );\n};\n\n\nexport default Tab3;\n"]},"metadata":{},"sourceType":"module"}