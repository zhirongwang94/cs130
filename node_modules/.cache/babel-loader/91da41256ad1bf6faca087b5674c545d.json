{"ast":null,"code":"import { Plugins } from \"@capacitor/core\";\nconst {\n  Contacts\n} = Plugins;\nexport default class ContactTracing {\n  constructor() {\n    this.contacts = [];\n  }\n\n  sendMessage() {\n    this.loadContacts(); //this.sendSms();\n  }\n\n  onSuccess(contacts) {\n    console.log(contacts.length + ' contacts found');\n\n    for (var i = 0; i < contacts.length; i++) {\n      console.log(contacts[i].contactId + \" - \" + contacts[i].displayName);\n\n      for (var j = 0; j < contacts[i].phoneNumbers.length; j++) {\n        var phone = contacts[i].phoneNumbers[j];\n        console.log(\"===> \" + phone + \"\\n\");\n      }\n    }\n  }\n\n  onError(error) {\n    console.log(\"Error grabbing contacts! \" + error);\n  }\n\n  async loadContacts() {\n    Contacts.getContacts().then(results => {\n      console.log(results);\n      this.contacts = results.contacts; // for (const contact of results.contacts) {\n      //     console.log(contact);\n      // }\n    });\n    console.log(\"Contacts Loaded! \\n\");\n  } // sendSms(){\n  //   var message:String = \"\";\n  //   message += \"------------------------------\\nIF EXPERIENCING SEEK IMMEDIATE MEDICAL ATTENTION!\\n\";\n  //   for(var index in emergencyList){\n  //     if(emergencyList[index].isChecked){\n  //       message += emergencyList[index].val + \"\\n\";\n  //     }\n  //   }\n  //   message += \"------------------------------\\nNon-Emergency Symptoms:\\n\";\n  //   for(var index in symptomList){\n  //     if(symptomList[index].isChecked){\n  //       message += symptomList[index].val + \"\\n\";\n  //     }\n  //   }\n  //   alert(\"Symptoms List \\n\" + message);\n  //   SMS.send('5167120628', \"test sms\");\n  //   alert(\"sendSms was called!\");\n  // }\n\n\n}","map":{"version":3,"sources":["/Users/calvinyung/Desktop/Fall 2020/cs130/project/cs130/src/pages/ContactTracing.tsx"],"names":["Plugins","Contacts","ContactTracing","constructor","contacts","sendMessage","loadContacts","onSuccess","console","log","length","i","contactId","displayName","j","phoneNumbers","phone","onError","error","getContacts","then","results"],"mappings":"AACA,SAASA,OAAT,QAAwB,iBAAxB;AAEA,MAAO;AAAEC,EAAAA;AAAF,IAAeD,OAAtB;AAGA,eAAe,MAAME,cAAN,CAAqB;AAEhCC,EAAAA,WAAW,GAAE;AAAA,SADbC,QACa,GADO,EACP;AAEZ;;AAEDC,EAAAA,WAAW,GAAE;AACX,SAAKC,YAAL,GADW,CAEX;AAED;;AAEOC,EAAAA,SAAR,CAAkBH,QAAlB,EAAqC;AACnCI,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACM,MAAT,GAAkB,iBAA9B;;AACA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGP,QAAQ,CAACM,MAA5B,EAAoCC,CAAC,EAArC,EAAyC;AACvCH,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACO,CAAD,CAAR,CAAYC,SAAZ,GAAwB,KAAxB,GAAgCR,QAAQ,CAACO,CAAD,CAAR,CAAYE,WAAxD;;AACA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGV,QAAQ,CAACO,CAAD,CAAR,CAAYI,YAAZ,CAAyBL,MAA5C,EAAoDI,CAAC,EAArD,EAAyD;AACtD,YAAIE,KAAK,GAAGZ,QAAQ,CAACO,CAAD,CAAR,CAAYI,YAAZ,CAAyBD,CAAzB,CAAZ;AACAN,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAUO,KAAV,GAAkB,IAA9B;AACF;AACH;AACD;;AAEOC,EAAAA,OAAR,CAAgBC,KAAhB,EAA6B;AAC3BV,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAA8BS,KAA1C;AACD;;AAED,QAAMZ,YAAN,GAAoB;AAChBL,IAAAA,QAAQ,CAACkB,WAAT,GAAuBC,IAAvB,CAA4BC,OAAO,IAAI;AACvCb,MAAAA,OAAO,CAACC,GAAR,CAAYY,OAAZ;AACA,WAAKjB,QAAL,GAAgBiB,OAAO,CAACjB,QAAxB,CAFuC,CAGvC;AACA;AACA;AACH,KANG;AAQFI,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD,GArC+B,CAwChC;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AA7DgC","sourcesContent":["import { Contact } from \"@capacitor-community/contacts\";\nimport { Plugins } from \"@capacitor/core\";\n\nconst  { Contacts } = Plugins;\n\n\nexport default class ContactTracing {\n    contacts:Contacts = [];\n    constructor(){\n  \n    }\n\n    sendMessage(){\n      this.loadContacts();\n      //this.sendSms();\n      \n    }\n\n    private onSuccess(contacts:Contact[]){\n      console.log(contacts.length + ' contacts found');\n      for(var i = 0; i < contacts.length; i++) {\n        console.log(contacts[i].contactId + \" - \" + contacts[i].displayName);\n        for(var j = 0; j < contacts[i].phoneNumbers.length; j++) {\n           var phone = contacts[i].phoneNumbers[j];\n           console.log(\"===> \" + phone + \"\\n\");\n        }\n     }\n    }\n\n    private onError(error:string){\n      console.log(\"Error grabbing contacts! \" + error);\n    }\n  \n    async loadContacts(){\n        Contacts.getContacts().then(results => {\n        console.log(results);\n        this.contacts = results.contacts;\n        // for (const contact of results.contacts) {\n        //     console.log(contact);\n        // }\n    });\n  \n      console.log(\"Contacts Loaded! \\n\");\n    }\n  \n   \n    // sendSms(){\n     \n    //   var message:String = \"\";\n  \n    //   message += \"------------------------------\\nIF EXPERIENCING SEEK IMMEDIATE MEDICAL ATTENTION!\\n\";\n    //   for(var index in emergencyList){\n    //     if(emergencyList[index].isChecked){\n    //       message += emergencyList[index].val + \"\\n\";\n    //     }\n    //   }\n  \n    //   message += \"------------------------------\\nNon-Emergency Symptoms:\\n\";\n    //   for(var index in symptomList){\n    //     if(symptomList[index].isChecked){\n    //       message += symptomList[index].val + \"\\n\";\n    //     }\n    //   }\n  \n    //   alert(\"Symptoms List \\n\" + message);\n    //   SMS.send('5167120628', \"test sms\");\n    //   alert(\"sendSms was called!\");\n    // }\n\n  \n  }"]},"metadata":{},"sourceType":"module"}