{"ast":null,"code":"var _jsxFileName = \"/Users/calvinyung/Desktop/Fall 2020/cs130/project/cs130/src/pages/Tab3.tsx\";\n// IONSLIDES FOR TABS?\n// ionChange\tEmitted when the checked property has changed.\nimport React from 'react';\nimport { IonButton, IonContent, IonHeader, IonPage, IonTitle, IonToolbar, IonCheckbox, IonList, IonItem, IonLabel, IonItemDivider } from '@ionic/react'; //import { SMS } from '@ionic-native/sms';\n//import {Contact} from \"@capacitor-community/contacts\";\n\nimport './Tab3.css';\nimport { useHistory, Route } from 'react-router-dom'; //\n\nimport displayContacts from './displayContacts';\n\n//Do I need to add another cordova plugin to complete sms functionality\nfunction checkSymptom(i, list) {\n  if (i < list.length) {\n    list[i].isChecked = !list[i].isChecked;\n  }\n}\n\nconst symptomList = [{\n  val: \"Cough\",\n  isChecked: false\n}, {\n  val: \"Fever or chills\",\n  isChecked: false\n}, {\n  val: \"Shortness of breath or difficulty breathing\",\n  isChecked: false\n}, {\n  val: \"Fatigue\",\n  isChecked: false\n}, {\n  val: \"Muscle or body aches\",\n  isChecked: false\n}, {\n  val: \"Headaches\",\n  isChecked: false\n}, {\n  val: \"New loss of taste or smell\",\n  isChecked: false\n}, {\n  val: \"Sore throat\",\n  isChecked: false\n}, {\n  val: \"Congestion or runny nose\",\n  isChecked: false\n}, {\n  val: \"Nausea or vomiting\",\n  isChecked: false\n}, {\n  val: \"Diarrhea\",\n  isChecked: false\n}];\nconst emergencyList = [{\n  val: \"Trouble breathing\",\n  isChecked: false\n}, {\n  val: \"Persistent pain or pressure in chest\",\n  isChecked: false\n}, {\n  val: \"New confusion\",\n  isChecked: false\n}, {\n  val: \"Inability to wake or stay awake\",\n  isChecked: false\n}, {\n  val: \"Bluish lips or face\",\n  isChecked: false\n}]; //Create ct object that will have loaded contacts to display. \n//Button click - Redirect to displayContacts page\n//displayContacts will modfy ContactTracing\n//on Buttonclick redirect to symptom display page\n\nconst Tab3 = () => {\n  // const [checked, setChecked] = useState(false);\n  // const [showAlert1, setShowAlert1] = useState(false);\n  //var c:ContactTracing = ContactTracing.getInstance();\n  const history = useHistory(); // const onPush = () => { //\n  //   history.push('/displayContacts')\n  // };\n\n  return /*#__PURE__*/React.createElement(IonPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \"Check Symptoms Experienced\"))), /*#__PURE__*/React.createElement(IonContent, {\n    fullscreen: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonItemDivider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, \"EMERGENCY WARNING SIGNS - IF EXPERIENCING SEEK IMMEDIATE MEDICAL ATTENTION\"), emergencyList.map(({\n    val,\n    isChecked\n  }, i) => /*#__PURE__*/React.createElement(IonItem, {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, val), /*#__PURE__*/React.createElement(IonCheckbox, {\n    slot: \"end\",\n    value: val,\n    checked: isChecked,\n    onClick: () => checkSymptom(i, emergencyList),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(IonList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonItemDivider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, \"Symptoms exprienced 2-14 days after exposure\"), symptomList.map(({\n    val,\n    isChecked\n  }, i) => /*#__PURE__*/React.createElement(IonItem, {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, val), /*#__PURE__*/React.createElement(IonCheckbox, {\n    slot: \"end\",\n    value: val,\n    checked: isChecked,\n    onClick: () => checkSymptom(i, symptomList),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(IonButton, {\n    href: \"displayContacts\",\n    expand: \"block\",\n    shape: \"round\",\n    color: \"dark\",\n    fill: \"solid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: match.url + \"/displayContacts\",\n    component: displayContacts,\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }), \"Send Message\")));\n};\n\nexport default Tab3;","map":{"version":3,"sources":["/Users/calvinyung/Desktop/Fall 2020/cs130/project/cs130/src/pages/Tab3.tsx"],"names":["React","IonButton","IonContent","IonHeader","IonPage","IonTitle","IonToolbar","IonCheckbox","IonList","IonItem","IonLabel","IonItemDivider","useHistory","Route","displayContacts","checkSymptom","i","list","length","isChecked","symptomList","val","emergencyList","Tab3","history","map","match","url"],"mappings":"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","sourcesContent":["// IONSLIDES FOR TABS?\n// ionChange\tEmitted when the checked property has changed.\n\nimport React from 'react';\nimport { IonAlert, IonButton, IonContent, IonHeader, IonPage, IonTitle, IonToolbar, IonCheckbox, IonList, IonItem, IonLabel, IonItemDivider, IonRouterOutlet  } from '@ionic/react';\n//import { SMS } from '@ionic-native/sms';\n//import {Contact} from \"@capacitor-community/contacts\";\nimport ContactTracing from \"./ContactTracing\";\nimport ExploreContainer from '../components/ExploreContainer';\nimport './Tab3.css';\nimport { scryRenderedDOMComponentsWithClass } from 'react-dom/test-utils';\nimport { isConstructorDeclaration } from 'typescript';\nimport {useHistory, Route} from 'react-router-dom' //\nimport displayContacts from './displayContacts';\nimport { IonReactRouter } from '@ionic/react-router';\n\n\n//Do I need to add another cordova plugin to complete sms functionality\n\nfunction checkSymptom(i:number, list:any){\n  if(i < list.length){\n    list[i].isChecked = !(list[i].isChecked);\n  }\n}\n\nconst symptomList = [\n  {val: \"Cough\", isChecked: false},\n  {val: \"Fever or chills\", isChecked: false},\n  {val: \"Shortness of breath or difficulty breathing\", isChecked: false},\n  {val: \"Fatigue\", isChecked: false},\n  {val: \"Muscle or body aches\", isChecked: false},\n  {val: \"Headaches\", isChecked: false},\n  {val: \"New loss of taste or smell\", isChecked: false},\n  {val: \"Sore throat\", isChecked: false},\n  {val: \"Congestion or runny nose\", isChecked: false},\n  {val: \"Nausea or vomiting\", isChecked: false},\n  {val: \"Diarrhea\", isChecked: false}\n]\n\nconst emergencyList = [\n  {val: \"Trouble breathing\", isChecked: false},\n  {val: \"Persistent pain or pressure in chest\", isChecked: false},\n  {val: \"New confusion\", isChecked: false},\n  {val: \"Inability to wake or stay awake\", isChecked: false},\n  {val: \"Bluish lips or face\", isChecked: false}\n]\n\n//Create ct object that will have loaded contacts to display. \n//Button click - Redirect to displayContacts page\n//displayContacts will modfy ContactTracing\n//on Buttonclick redirect to symptom display page\n\n\n\nconst Tab3: React.FC = () => {\n  // const [checked, setChecked] = useState(false);\n  // const [showAlert1, setShowAlert1] = useState(false);\n  //var c:ContactTracing = ContactTracing.getInstance();\n  const history = useHistory()\n  // const onPush = () => { //\n  //   history.push('/displayContacts')\n  // };\n  \n\n  return (\n    <IonPage>\n      {/* <IonReactRouter>\n      <IonRouterOutlet>\n          <Route path=\"/displayContacts\" component={displayContacts} exact={true}/>\n      </IonRouterOutlet>\n      </IonReactRouter> */}\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>Check Symptoms Experienced</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent fullscreen>\n      <IonList>\n          <IonItemDivider>EMERGENCY WARNING SIGNS - IF EXPERIENCING SEEK IMMEDIATE MEDICAL ATTENTION</IonItemDivider>\n          {emergencyList.map(({ val, isChecked }, i) => (\n            <IonItem key={i}>\n              <IonLabel>{val}</IonLabel>\n              <IonCheckbox slot=\"end\" value={val} checked={isChecked} onClick={()=>checkSymptom(i,emergencyList)} />\n            </IonItem>\n          ))} \n      </IonList>\n\n      <IonList>\n          <IonItemDivider>Symptoms exprienced 2-14 days after exposure</IonItemDivider>\n          {symptomList.map(({ val, isChecked }, i) => (\n            <IonItem key={i}>\n              <IonLabel>{val}</IonLabel>\n              <IonCheckbox slot=\"end\" value={val} checked={isChecked} onClick={()=>checkSymptom(i,symptomList)} />\n              \n            </IonItem>\n          ))}\n      </IonList>\n\n      <IonButton href='displayContacts' expand=\"block\" shape=\"round\"  color=\"dark\" fill=\"solid\">\n        <Route path={match.url +  \"/displayContacts\"} component={displayContacts} exact={true}/>\n        Send Message\n      </IonButton>\n      \n      \n      </IonContent>\n\n    </IonPage>\n  );\n};\n\n\nexport default Tab3;\n"]},"metadata":{},"sourceType":"module"}