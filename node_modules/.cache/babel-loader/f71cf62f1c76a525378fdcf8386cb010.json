{"ast":null,"code":"var _jsxFileName = \"/Users/calvinyung/Desktop/Fall 2020/cs130/project/cs130/src/pages/Tab1.js\";\nimport React, { Component, useState } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport './map.css'; // for the map, className=\"google-map\"\n\nimport { Icon } from '@iconify/react'; // for map pin\n//import locationIcon from '@iconify/icons-mdi/map-marker' // for map pin\n\nimport PlaceCard from '../components/PlaceCard';\nimport Marker from './Marker';\nimport SimpleMarker from './SimpleMarker';\nimport firebase from '../Firebase';\nimport { Geolocation, Geoposition } from '@ionic-native/geolocation';\nimport { Button, Input, Divider, message } from 'antd';\nimport { AnyCnameRecord } from 'dns';\nimport { Plugins, LocalNotificationEnabledResult, LocalNotificationActionPerformed, Device } from '@capacitor/core';\nimport { IonHeader, IonToolbar, IonTitle, IonContent, IonList, IonItem, IonLabel, IonInput, IonButton, IonPage } from \"@ionic/react\";\nimport App from '../App';\nconst {\n  LocalNotifications\n} = Plugins;\nconst lats = [37.7313933, 37.7413933, 37.7413933];\n\nconst LocationPin = () => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 1\n  }\n}, /*#__PURE__*/React.createElement(SimpleMarker, {\n  name: \"My Marker\",\n  color: \"blue\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }\n}), /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }\n}, \"1\"));\n\nclass Tab1 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.apiHasLoaded = (map, mapsApi) => {\n      this.setState({\n        mapsLoaded: true,\n        map: map,\n        mapsApi: mapsApi,\n        placesService: new mapsApi.places.PlacesService(map),\n        geoCoderService: new mapsApi.Geocoder(),\n        directionService: new mapsApi.DirectionsService()\n      });\n    };\n\n    this.handleSearch = () => {\n      if (this.state.map === {}) {\n        return;\n      } // console.log(this.state.mapsApi);\n      // console.log(this.state.map);\n      // console.log(this.state.placesService);\n      // console.log(this.state.latitude, this.state.longitude);\n\n\n      let {\n        markers,\n        placesService,\n        directionService,\n        mapsApi\n      } = this.state;\n      const filteredResults = [];\n      const testing_site_latlng_array = []; //if (markers.length === 0){\n      //  console.log(\"add marker and try again\");\n      //  return;\n      //}\n\n      const markerLatLng = new mapsApi.LatLng(this.state.latitude, this.state.longitude);\n      const placesRequest = {\n        location: markerLatLng,\n        //radius: '3000000', // Cannot be used with rankBy. Pick your poison!\n        type: ['hospital', 'pharmacy', 'doctor'],\n        // List of types: https://developers.google.com/places/supported_types\n        query: 'covid 19 testing site',\n        rankBy: mapsApi.places.RankBy.DISTANCE\n      }; //console.log(placesRequest);\n\n      placesService.textSearch(placesRequest, response => {\n        //console.log(response.length)\n        let responseLimit = Math.min(5, response.length);\n\n        for (let i = 0; i < responseLimit; i++) {\n          const covidTesting = response[i];\n          const {\n            rating,\n            name\n          } = covidTesting;\n          const address = covidTesting.formatted_address;\n          const lat = covidTesting.geometry.location.lat();\n          const lng = covidTesting.geometry.location.lng();\n          let openNow = false;\n\n          if (covidTesting.opening_hours) {\n            openNow = covidTesting.opening_hours.isOpen(); // e.g true/false\n          } //console.log(name,address, openNow);\n\n\n          filteredResults.push({\n            name,\n            address,\n            rating,\n            lat,\n            lng,\n            openNow\n          });\n          this.setState({\n            searchResults: filteredResults\n          });\n        } //console.log(this.state.searchResults);  \n\n\n        this.setState({\n          siteLat0: this.state.searchResults[0].lat\n        });\n        this.setState({\n          siteLng0: this.state.searchResults[0].lng\n        });\n        this.setState({\n          siteLat1: this.state.searchResults[1].lat\n        });\n        this.setState({\n          siteLng1: this.state.searchResults[1].lng\n        });\n        this.setState({\n          siteLat2: this.state.searchResults[2].lat\n        });\n        this.setState({\n          siteLng2: this.state.searchResults[2].lng\n        });\n        this.setState({\n          siteLat3: this.state.searchResults[3].lat\n        });\n        this.setState({\n          siteLng3: this.state.searchResults[3].lng\n        });\n        this.setState({\n          siteLat4: this.state.searchResults[4].lat\n        });\n        this.setState({\n          siteLng4: this.state.searchResults[4].lng\n        });\n      });\n    };\n\n    this.state = {\n      mapsLoaded: false,\n      latitude: 38,\n      longitude: -118,\n      map: {},\n      mapsApi: {},\n      markers: [],\n      searchResults: [],\n      placesService: {},\n      geoCoderService: {},\n      directionService: {},\n      testing_site_locations: [],\n      // array of {lat: number, lng: number}\n      siteLat0: 38,\n      siteLat1: 38,\n      siteLat2: 38,\n      siteLat3: 38,\n      siteLat4: 38,\n      siteLng0: -118,\n      siteLng1: -118,\n      siteLng2: -118,\n      siteLng3: -118,\n      siteLng4: -118\n    };\n    this.initNotif();\n  }\n\n  async initNotif() {\n    await LocalNotifications.requestPermission();\n  }\n\n  async componentDidMount() {\n    await navigator.geolocation.getCurrentPosition(position => {\n      this.setState({\n        latitude: position.coords.latitude,\n        longitude: position.coords.longitude\n      });\n      console.log('Position\\n', position);\n    });\n    var id = navigator.geolocation.watchPosition(position => {\n      const userLoc = {\n        latitude: position.coords.latitude,\n        longitude: position.coords.longitude\n      };\n      console.log(\"Location\\n\", userLoc);\n      const db = firebase.firestore().collection('users');\n      const user = firebase.auth().currentUser;\n      var user_id = '';\n\n      if (user != null) {\n        user_id = user.uid.toString();\n        db.doc(user_id).update({\n          'location': userLoc\n        });\n        this.nearPositive(userLoc);\n      }\n    }, err => {\n      if (err.code == 1) {\n        console.log(\"Error: Access is denied!\");\n      } else if (err.code == 2) {\n        console.log(\"Error: Position is unavailable!\");\n      }\n    }, {\n      enableHighAccuracy: true,\n      timeout: 60000,\n      maximumAge: 30000\n    });\n  } //if user is near positive user, will send local alert\n\n\n  nearPositive(location) {\n    const all_usrs = firebase.firestore().collection('users');\n    let close_usrs = all_usrs.where(location, '!=', {}).get();\n    console.log('close_usr', close_usrs); //alert(\"Num people\", close_usrs.length);\n\n    if (close_usrs != {}) {\n      this.notify();\n    }\n  }\n\n  async notify() {\n    await LocalNotifications.schedule({\n      notifications: [{\n        title: 'Covid Proximity!',\n        body: 'There is a Covid positive user near your location!',\n        id: 1,\n        sound: null,\n        iconColor: '#0000FF'\n      }]\n    });\n  }\n\n  distance(lon1, lat1, lon2, lat2) {\n    var R = 6371; // Radius of the earth in km\n\n    var dLat = (lat2 - lat1).toRad(); // Javascript functions in radians\n\n    var dLon = (lon2 - lon1).toRad();\n    var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(lat1.toRad()) * Math.cos(lat2.toRad()) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    var d = R * c; // Distance in km\n\n    return d;\n  } //<IonButton color=\"primary\" onClick={this.getLocation}>{this.state.longitude ? `${this.state.latitude} ${this.state.longitude}` : \"Get Location\"}</IonButton>\n\n\n  render() {\n    //const { constraints, mapsLoaded, singaporeLatLng, markers, searchResults } = this.state;\n    const {\n      markers,\n      geoCoderService,\n      searchResults\n    } = this.state; // Google Maps Services\n\n    return /*#__PURE__*/React.createElement(IonPage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(IonContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 15\n      }\n    }, \"Current Location: \", JSON.stringify(this.state.latitude), \" ,  \", JSON.stringify(this.state.longitude)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 15\n      }\n    }, \"Initial Location: \", JSON.stringify(this.state.latitude), \" ,  \", JSON.stringify(this.state.longitude)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"google-map\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(GoogleMapReact, {\n      bootstrapURLKeys: {\n        key: \"AIzaSyBj9b-EHxuAAihd8u2HBBqWOSXukFlA3jY\",\n        libraries: ['places', 'directions']\n      },\n      defaultZoom: 12,\n      defaultCenter: {\n        lat: 38,\n        lng: -118\n      },\n      center: {\n        lat: this.state.latitude,\n        lng: this.state.longitude\n      },\n      yesIWantToUseGoogleMapApiInternals: true,\n      yesIWantToUseGoogleMapApiInternals: true,\n      onGoogleApiLoaded: ({\n        map,\n        maps\n      }) => this.apiHasLoaded(map, maps) // \"maps\" is the mapApi. Bad naming but that's their library.\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Marker, {\n      lat: this.state.latitude,\n      lng: this.state.longitude,\n      name: \"My Marker\",\n      color: \"blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(SimpleMarker, {\n      lat: this.state.siteLat0,\n      lng: this.state.siteLng0,\n      name: \"My Marker\",\n      color: \"red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(SimpleMarker, {\n      lat: this.state.siteLat1,\n      lng: this.state.siteLng1,\n      name: \"My Marker\",\n      color: \"red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(SimpleMarker, {\n      lat: this.state.siteLat2,\n      lng: this.state.siteLng2,\n      name: \"My Marker\",\n      color: \"red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(SimpleMarker, {\n      lat: this.state.siteLat3,\n      lng: this.state.siteLng3,\n      name: \"My Marker\",\n      color: \"red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(SimpleMarker, {\n      lat: this.state.siteLat4,\n      lng: this.state.siteLng4,\n      name: \"My Marker\",\n      color: \"red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 14\n      }\n    }))), /*#__PURE__*/React.createElement(IonButton, {\n      color: \"primary\",\n      onClick: this.handleSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 15\n      }\n    }, \" \", \"search\", \"  \"), searchResults.length > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"section\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-column justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"mb-4 fw-md\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 17\n      }\n    }, \"Testing Center Nearby\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 20\n      }\n    }, searchResults.map((result, key) => /*#__PURE__*/React.createElement(PlaceCard, {\n      info: result,\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 60\n      }\n    })))))) : null));\n  }\n\n}\n\n;\nexport default Tab1;","map":{"version":3,"sources":["/Users/calvinyung/Desktop/Fall 2020/cs130/project/cs130/src/pages/Tab1.js"],"names":["React","Component","useState","GoogleMapReact","Icon","PlaceCard","Marker","SimpleMarker","firebase","Geolocation","Geoposition","Button","Input","Divider","message","AnyCnameRecord","Plugins","LocalNotificationEnabledResult","LocalNotificationActionPerformed","Device","IonHeader","IonToolbar","IonTitle","IonContent","IonList","IonItem","IonLabel","IonInput","IonButton","IonPage","App","LocalNotifications","lats","LocationPin","Tab1","constructor","props","apiHasLoaded","map","mapsApi","setState","mapsLoaded","placesService","places","PlacesService","geoCoderService","Geocoder","directionService","DirectionsService","handleSearch","state","markers","filteredResults","testing_site_latlng_array","markerLatLng","LatLng","latitude","longitude","placesRequest","location","type","query","rankBy","RankBy","DISTANCE","textSearch","response","responseLimit","Math","min","length","i","covidTesting","rating","name","address","formatted_address","lat","geometry","lng","openNow","opening_hours","isOpen","push","searchResults","siteLat0","siteLng0","siteLat1","siteLng1","siteLat2","siteLng2","siteLat3","siteLng3","siteLat4","siteLng4","testing_site_locations","initNotif","requestPermission","componentDidMount","navigator","geolocation","getCurrentPosition","position","coords","console","log","id","watchPosition","userLoc","db","firestore","collection","user","auth","currentUser","user_id","uid","toString","doc","update","nearPositive","err","code","enableHighAccuracy","timeout","maximumAge","all_usrs","close_usrs","where","get","notify","schedule","notifications","title","body","sound","iconColor","distance","lon1","lat1","lon2","lat2","R","dLat","toRad","dLon","a","sin","cos","c","atan2","sqrt","d","render","JSON","stringify","key","libraries","maps","result"],"mappings":";AAAA,OAAOA,KAAP,IAAiBC,SAAjB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAO,WAAP,C,CAAoB;;AACpB,SAASC,IAAT,QAAqB,gBAArB,C,CAAuC;AACvC;;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,2BAAzC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,OAAxB,EAAiCC,OAAjC,QAAgD,MAAhD;AACA,SAASC,cAAT,QAA+B,KAA/B;AACA,SAAQC,OAAR,EAAiBC,8BAAjB,EAAiDC,gCAAjD,EAAmFC,MAAnF,QAAgG,iBAAhG;AACA,SACIC,SADJ,EAEIC,UAFJ,EAGIC,QAHJ,EAIIC,UAJJ,EAKIC,OALJ,EAMIC,OANJ,EAOIC,QAPJ,EAQIC,QARJ,EASIC,SATJ,EAUIC,OAVJ,QAWS,cAXT;AAYA,OAAOC,GAAP,MAAgB,QAAhB;AAEA,MAAM;AAACC,EAAAA;AAAD,IAAuBf,OAA7B;AAEA,MAAMgB,IAAI,GAAG,CAAC,UAAD,EAAa,UAAb,EAAyB,UAAzB,CAAb;;AACA,MAAMC,WAAW,GAAG,mBACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,YAAD;AAAc,EAAA,IAAI,EAAC,WAAnB;AAA+B,EAAA,KAAK,EAAC,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFF,CADA;;AAQA,MAAMC,IAAN,SAAmBjC,SAAnB,CAA8B;AAC1BkC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAgCnBC,YAhCmB,GAgCH,CAACC,GAAD,EAAMC,OAAN,KAAkB;AAC9B,WAAKC,QAAL,CAAc;AACZC,QAAAA,UAAU,EAAE,IADA;AAEZH,QAAAA,GAAG,EAAEA,GAFO;AAGZC,QAAAA,OAAO,EAAEA,OAHG;AAIZG,QAAAA,aAAa,EAAE,IAAIH,OAAO,CAACI,MAAR,CAAeC,aAAnB,CAAiCN,GAAjC,CAJH;AAKZO,QAAAA,eAAe,EAAE,IAAIN,OAAO,CAACO,QAAZ,EALL;AAMZC,QAAAA,gBAAgB,EAAE,IAAIR,OAAO,CAACS,iBAAZ;AANN,OAAd;AAQH,KAzCkB;;AAAA,SA4CnBC,YA5CmB,GA4CH,MAAM;AACpB,UAAI,KAAKC,KAAL,CAAWZ,GAAX,KAAmB,EAAvB,EAA0B;AACxB;AACD,OAHmB,CAKpB;AACA;AACA;AACA;;;AACE,UAAI;AAACa,QAAAA,OAAD;AAAUT,QAAAA,aAAV;AAAyBK,QAAAA,gBAAzB;AAA0CR,QAAAA;AAA1C,UAAsD,KAAKW,KAA/D;AACA,YAAME,eAAe,GAAG,EAAxB;AACA,YAAMC,yBAAyB,GAAG,EAAlC,CAXkB,CAYlB;AACA;AACA;AACA;;AACA,YAAMC,YAAY,GAAG,IAAIf,OAAO,CAACgB,MAAZ,CAAmB,KAAKL,KAAL,CAAWM,QAA9B,EAAwC,KAAKN,KAAL,CAAWO,SAAnD,CAArB;AACA,YAAMC,aAAa,GAAG;AAChBC,QAAAA,QAAQ,EAAEL,YADM;AAEhB;AACAM,QAAAA,IAAI,EAAE,CAAC,UAAD,EAAa,UAAb,EAAwB,QAAxB,CAHU;AAGyB;AACzCC,QAAAA,KAAK,EAAE,uBAJS;AAKhBC,QAAAA,MAAM,EAAEvB,OAAO,CAACI,MAAR,CAAeoB,MAAf,CAAsBC;AALd,OAAtB,CAjBkB,CAwBhB;;AACAtB,MAAAA,aAAa,CAACuB,UAAd,CAAyBP,aAAzB,EAA0CQ,QAAD,IAAc;AACnD;AACA,YAAIC,aAAa,GAAGC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYH,QAAQ,CAACI,MAArB,CAApB;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,aAApB,EAAmCI,CAAC,EAApC,EAAwC;AACpC,gBAAMC,YAAY,GAAGN,QAAQ,CAACK,CAAD,CAA7B;AACA,gBAAM;AAAEE,YAAAA,MAAF;AAAUC,YAAAA;AAAV,cAAmBF,YAAzB;AACA,gBAAMG,OAAO,GAAGH,YAAY,CAACI,iBAA7B;AACA,gBAAMC,GAAG,GAAGL,YAAY,CAACM,QAAb,CAAsBnB,QAAtB,CAA+BkB,GAA/B,EAAZ;AACA,gBAAME,GAAG,GAAGP,YAAY,CAACM,QAAb,CAAsBnB,QAAtB,CAA+BoB,GAA/B,EAAZ;AACA,cAAIC,OAAO,GAAG,KAAd;;AACA,cAAIR,YAAY,CAACS,aAAjB,EAAgC;AAC5BD,YAAAA,OAAO,GAAGR,YAAY,CAACS,aAAb,CAA2BC,MAA3B,EAAV,CAD4B,CACmB;AAClD,WATmC,CAUpC;;;AACA9B,UAAAA,eAAe,CAAC+B,IAAhB,CAAqB;AACnBT,YAAAA,IADmB;AAEnBC,YAAAA,OAFmB;AAGnBF,YAAAA,MAHmB;AAInBI,YAAAA,GAJmB;AAKnBE,YAAAA,GALmB;AAMnBC,YAAAA;AANmB,WAArB;AAQA,eAAKxC,QAAL,CAAc;AAAE4C,YAAAA,aAAa,EAAEhC;AAAjB,WAAd;AACH,SAvBkD,CAwBnD;;;AAEA,aAAKZ,QAAL,CAAc;AAAC6C,UAAAA,QAAQ,EAAE,KAAKnC,KAAL,CAAWkC,aAAX,CAAyB,CAAzB,EAA4BP;AAAvC,SAAd;AACA,aAAKrC,QAAL,CAAc;AAAC8C,UAAAA,QAAQ,EAAE,KAAKpC,KAAL,CAAWkC,aAAX,CAAyB,CAAzB,EAA4BL;AAAvC,SAAd;AAEA,aAAKvC,QAAL,CAAc;AAAC+C,UAAAA,QAAQ,EAAE,KAAKrC,KAAL,CAAWkC,aAAX,CAAyB,CAAzB,EAA4BP;AAAvC,SAAd;AACA,aAAKrC,QAAL,CAAc;AAACgD,UAAAA,QAAQ,EAAE,KAAKtC,KAAL,CAAWkC,aAAX,CAAyB,CAAzB,EAA4BL;AAAvC,SAAd;AAEA,aAAKvC,QAAL,CAAc;AAACiD,UAAAA,QAAQ,EAAE,KAAKvC,KAAL,CAAWkC,aAAX,CAAyB,CAAzB,EAA4BP;AAAvC,SAAd;AACA,aAAKrC,QAAL,CAAc;AAACkD,UAAAA,QAAQ,EAAE,KAAKxC,KAAL,CAAWkC,aAAX,CAAyB,CAAzB,EAA4BL;AAAvC,SAAd;AAEA,aAAKvC,QAAL,CAAc;AAACmD,UAAAA,QAAQ,EAAE,KAAKzC,KAAL,CAAWkC,aAAX,CAAyB,CAAzB,EAA4BP;AAAvC,SAAd;AACA,aAAKrC,QAAL,CAAc;AAACoD,UAAAA,QAAQ,EAAE,KAAK1C,KAAL,CAAWkC,aAAX,CAAyB,CAAzB,EAA4BL;AAAvC,SAAd;AAEA,aAAKvC,QAAL,CAAc;AAACqD,UAAAA,QAAQ,EAAE,KAAK3C,KAAL,CAAWkC,aAAX,CAAyB,CAAzB,EAA4BP;AAAvC,SAAd;AACA,aAAKrC,QAAL,CAAc;AAACsD,UAAAA,QAAQ,EAAE,KAAK5C,KAAL,CAAWkC,aAAX,CAAyB,CAAzB,EAA4BL;AAAvC,SAAd;AAEH,OAzCD;AA2CL,KAhHkB;;AAEf,SAAK7B,KAAL,GAAa;AACTT,MAAAA,UAAU,EAAE,KADH;AAETe,MAAAA,QAAQ,EAAC,EAFA;AAGTC,MAAAA,SAAS,EAAC,CAAC,GAHF;AAITnB,MAAAA,GAAG,EAAE,EAJI;AAKTC,MAAAA,OAAO,EAAE,EALA;AAMTY,MAAAA,OAAO,EAAE,EANA;AAOTiC,MAAAA,aAAa,EAAE,EAPN;AAQT1C,MAAAA,aAAa,EAAE,EARN;AASTG,MAAAA,eAAe,EAAE,EATR;AAUTE,MAAAA,gBAAgB,EAAE,EAVT;AAWTgD,MAAAA,sBAAsB,EAAE,EAXf;AAWmB;AAC5BV,MAAAA,QAAQ,EAAE,EAZD;AAaTE,MAAAA,QAAQ,EAAE,EAbD;AAcTE,MAAAA,QAAQ,EAAE,EAdD;AAeTE,MAAAA,QAAQ,EAAE,EAfD;AAgBTE,MAAAA,QAAQ,EAAE,EAhBD;AAiBTP,MAAAA,QAAQ,EAAE,CAAC,GAjBF;AAkBTE,MAAAA,QAAQ,EAAE,CAAC,GAlBF;AAmBTE,MAAAA,QAAQ,EAAE,CAAC,GAnBF;AAoBTE,MAAAA,QAAQ,EAAE,CAAC,GApBF;AAqBTE,MAAAA,QAAQ,EAAE,CAAC;AArBF,KAAb;AAuBA,SAAKE,SAAL;AACH;;AAED,QAAMA,SAAN,GAAiB;AACf,UAAMjE,kBAAkB,CAACkE,iBAAnB,EAAN;AACD;;AAoFD,QAAMC,iBAAN,GAA0B;AACxB,UAAMC,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CACFC,QAAQ,IAAI;AAAC,WAAK9D,QAAL,CAAc;AACvBgB,QAAAA,QAAQ,EAAE8C,QAAQ,CAACC,MAAT,CAAgB/C,QADH;AAEvBC,QAAAA,SAAS,EAAE6C,QAAQ,CAACC,MAAT,CAAgB9C;AAFJ,OAAd;AAIb+C,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BH,QAA1B;AAAqC,KALnC,CAAN;AAQA,QAAII,EAAE,GAAGP,SAAS,CAACC,WAAV,CAAsBO,aAAtB,CACNL,QAAD,IAAc;AACZ,YAAMM,OAAO,GAAG;AAACpD,QAAAA,QAAQ,EAAC8C,QAAQ,CAACC,MAAT,CAAgB/C,QAA1B;AAAoCC,QAAAA,SAAS,EAAE6C,QAAQ,CAACC,MAAT,CAAgB9C;AAA/D,OAAhB;AACA+C,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BG,OAA1B;AACA,YAAMC,EAAE,GAAGrG,QAAQ,CAACsG,SAAT,GAAqBC,UAArB,CAAgC,OAAhC,CAAX;AACA,YAAMC,IAAI,GAAGxG,QAAQ,CAACyG,IAAT,GAAgBC,WAA7B;AACA,UAAIC,OAAO,GAAG,EAAd;;AACA,UAAIH,IAAI,IAAE,IAAV,EAAe;AACbG,QAAAA,OAAO,GAAGH,IAAI,CAACI,GAAL,CAASC,QAAT,EAAV;AACAR,QAAAA,EAAE,CAACS,GAAH,CAAOH,OAAP,EAAgBI,MAAhB,CAAuB;AAAC,sBAAYX;AAAb,SAAvB;AACA,aAAKY,YAAL,CAAkBZ,OAAlB;AACD;AACF,KAZM,EAaNa,GAAD,IAAO;AACL,UAAGA,GAAG,CAACC,IAAJ,IAAY,CAAf,EAAkB;AAChBlB,QAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACD,OAFD,MAEO,IAAIgB,GAAG,CAACC,IAAJ,IAAY,CAAhB,EAAmB;AACxBlB,QAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACD;AACF,KAnBM,EAoBP;AAAEkB,MAAAA,kBAAkB,EAAC,IAArB;AAA2BC,MAAAA,OAAO,EAAE,KAApC;AAA2CC,MAAAA,UAAU,EAAC;AAAtD,KApBO,CAAT;AAsBD,GAlJyB,CAoJ1B;;;AACAL,EAAAA,YAAY,CAAC7D,QAAD,EAAU;AACpB,UAAMmE,QAAQ,GAAGtH,QAAQ,CAACsG,SAAT,GAAqBC,UAArB,CAAgC,OAAhC,CAAjB;AACA,QAAIgB,UAAU,GAAGD,QAAQ,CAACE,KAAT,CAAerE,QAAf,EAAyB,IAAzB,EAA+B,EAA/B,EAAmCsE,GAAnC,EAAjB;AACAzB,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBsB,UAAzB,EAHoB,CAIpB;;AACA,QAAGA,UAAU,IAAI,EAAjB,EAAoB;AAClB,WAAKG,MAAL;AACD;AACF;;AAGD,QAAMA,MAAN,GAAc;AACZ,UAAMnG,kBAAkB,CAACoG,QAAnB,CAA4B;AAChCC,MAAAA,aAAa,EAAC,CAAC;AACbC,QAAAA,KAAK,EAAE,kBADM;AAEbC,QAAAA,IAAI,EAAE,oDAFO;AAGb5B,QAAAA,EAAE,EAAE,CAHS;AAIb6B,QAAAA,KAAK,EAAE,IAJM;AAKbC,QAAAA,SAAS,EAAE;AALE,OAAD;AADkB,KAA5B,CAAN;AAUD;;AAEDC,EAAAA,QAAQ,CAACC,IAAD,EAAOC,IAAP,EAAaC,IAAb,EAAmBC,IAAnB,EAAyB;AAC/B,QAAIC,CAAC,GAAG,IAAR,CAD+B,CACjB;;AACd,QAAIC,IAAI,GAAG,CAACF,IAAI,GAACF,IAAN,EAAYK,KAAZ,EAAX,CAF+B,CAEE;;AACjC,QAAIC,IAAI,GAAG,CAACL,IAAI,GAACF,IAAN,EAAYM,KAAZ,EAAX;AACA,QAAIE,CAAC,GAAG9E,IAAI,CAAC+E,GAAL,CAASJ,IAAI,GAAC,CAAd,IAAmB3E,IAAI,CAAC+E,GAAL,CAASJ,IAAI,GAAC,CAAd,CAAnB,GACA3E,IAAI,CAACgF,GAAL,CAAST,IAAI,CAACK,KAAL,EAAT,IAAyB5E,IAAI,CAACgF,GAAL,CAASP,IAAI,CAACG,KAAL,EAAT,CAAzB,GACA5E,IAAI,CAAC+E,GAAL,CAASF,IAAI,GAAC,CAAd,CADA,GACmB7E,IAAI,CAAC+E,GAAL,CAASF,IAAI,GAAC,CAAd,CAF3B;AAGA,QAAII,CAAC,GAAG,IAAIjF,IAAI,CAACkF,KAAL,CAAWlF,IAAI,CAACmF,IAAL,CAAUL,CAAV,CAAX,EAAyB9E,IAAI,CAACmF,IAAL,CAAU,IAAEL,CAAZ,CAAzB,CAAZ;AACA,QAAIM,CAAC,GAAGV,CAAC,GAAGO,CAAZ,CAR+B,CAQhB;;AACf,WAAOG,CAAP;AACD,GAvLyB,CA+LxB;;;AACAC,EAAAA,MAAM,GAAE;AAER;AACA,UAAM;AAAEtG,MAAAA,OAAF;AAAWN,MAAAA,eAAX;AAA2BuC,MAAAA;AAA3B,QAA6C,KAAKlC,KAAxD,CAHQ,CAGuD;;AAC/D,wBACQ,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAUA,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAwBwG,IAAI,CAACC,SAAL,CAAe,KAAKzG,KAAL,CAAWM,QAA1B,CAAxB,UAAmEkG,IAAI,CAACC,SAAL,CAAe,KAAKzG,KAAL,CAAWO,SAA1B,CAAnE,CADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAwBiG,IAAI,CAACC,SAAL,CAAe,KAAKzG,KAAL,CAAWM,QAA1B,CAAxB,UAAkEkG,IAAI,CAACC,SAAL,CAAe,KAAKzG,KAAL,CAAWO,SAA1B,CAAlE,CAFA,eAIF;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,cAAD;AACE,MAAA,gBAAgB,EAAE;AAChBmG,QAAAA,GAAG,EAAE,yCADW;AAEhBC,QAAAA,SAAS,EAAE,CAAC,QAAD,EAAW,YAAX;AAFK,OADpB;AAKE,MAAA,WAAW,EAAE,EALf;AAME,MAAA,aAAa,EAAE;AAAEhF,QAAAA,GAAG,EAAE,EAAP;AAAWE,QAAAA,GAAG,EAAE,CAAC;AAAjB,OANjB;AAOE,MAAA,MAAM,EAAE;AAAEF,QAAAA,GAAG,EAAE,KAAK3B,KAAL,CAAWM,QAAlB;AAA4BuB,QAAAA,GAAG,EAAE,KAAK7B,KAAL,CAAWO;AAA5C,OAPV;AAQE,MAAA,kCAAkC,EAAE,IARtC;AASE,MAAA,kCAAkC,MATpC;AAUE,MAAA,iBAAiB,EAAE,CAAC;AAAEnB,QAAAA,GAAF;AAAOwH,QAAAA;AAAP,OAAD,KAAmB,KAAKzH,YAAL,CAAkBC,GAAlB,EAAuBwH,IAAvB,CAVxC,CAUsE;AAVtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAcC,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAE,KAAK5G,KAAL,CAAWM,QAAxB;AAAkC,MAAA,GAAG,EAAE,KAAKN,KAAL,CAAWO,SAAlD;AAA6D,MAAA,IAAI,EAAC,WAAlE;AAA8E,MAAA,KAAK,EAAC,MAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdD,eAeC,oBAAC,YAAD;AAAc,MAAA,GAAG,EAAE,KAAKP,KAAL,CAAWmC,QAA9B;AAAwC,MAAA,GAAG,EAAE,KAAKnC,KAAL,CAAWoC,QAAxD;AAAkE,MAAA,IAAI,EAAC,WAAvE;AAAmF,MAAA,KAAK,EAAC,KAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfD,eAgBC,oBAAC,YAAD;AAAc,MAAA,GAAG,EAAE,KAAKpC,KAAL,CAAWqC,QAA9B;AAAwC,MAAA,GAAG,EAAE,KAAKrC,KAAL,CAAWsC,QAAxD;AAAkE,MAAA,IAAI,EAAC,WAAvE;AAAmF,MAAA,KAAK,EAAC,KAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBD,eAiBC,oBAAC,YAAD;AAAc,MAAA,GAAG,EAAE,KAAKtC,KAAL,CAAWuC,QAA9B;AAAwC,MAAA,GAAG,EAAE,KAAKvC,KAAL,CAAWwC,QAAxD;AAAkE,MAAA,IAAI,EAAC,WAAvE;AAAmF,MAAA,KAAK,EAAC,KAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBD,eAkBC,oBAAC,YAAD;AAAc,MAAA,GAAG,EAAE,KAAKxC,KAAL,CAAWyC,QAA9B;AAAwC,MAAA,GAAG,EAAE,KAAKzC,KAAL,CAAW0C,QAAxD;AAAkE,MAAA,IAAI,EAAC,WAAvE;AAAmF,MAAA,KAAK,EAAC,KAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBD,eAmBC,oBAAC,YAAD;AAAc,MAAA,GAAG,EAAE,KAAK1C,KAAL,CAAW2C,QAA9B;AAAwC,MAAA,GAAG,EAAE,KAAK3C,KAAL,CAAW4C,QAAxD;AAAkE,MAAA,IAAI,EAAC,WAAvE;AAAmF,MAAA,KAAK,EAAC,KAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBD,CADA,CAJE,eAiCA,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,SAAjB;AAA2B,MAAA,OAAO,EAAE,KAAK7C,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAyD,QAAzD,OAjCA,EAqCDmC,aAAa,CAACd,MAAd,GAAuB,CAAvB,gBACE,uDAEP;AAAS,MAAA,SAAS,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAK,MAAA,SAAS,EAAC,2CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEQ;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFR,eAIW;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIc,aAAa,CAAC9C,GAAd,CAAkB,CAACyH,MAAD,EAASH,GAAT,kBAAkB,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAEG,MAAjB;AAAyB,MAAA,GAAG,EAAEH,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApC,CADJ,CAJX,CADA,CAFO,CADF,GAeI,IApDH,CAVA,CADR;AAoEC;;AAxQuB;;AA0Q3B;AAKD,eAAe1H,IAAf","sourcesContent":["import React,  { Component,useState } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport './map.css'  // for the map, className=\"google-map\"\nimport { Icon } from '@iconify/react'  // for map pin\n//import locationIcon from '@iconify/icons-mdi/map-marker' // for map pin\nimport PlaceCard from '../components/PlaceCard';\nimport Marker from './Marker';\nimport SimpleMarker from './SimpleMarker';\nimport firebase from '../Firebase';\nimport { Geolocation, Geoposition } from '@ionic-native/geolocation';\nimport { Button, Input, Divider, message } from 'antd';\nimport { AnyCnameRecord } from 'dns';\nimport {Plugins, LocalNotificationEnabledResult, LocalNotificationActionPerformed, Device} from '@capacitor/core';\nimport {\n    IonHeader,\n    IonToolbar,\n    IonTitle,\n    IonContent,\n    IonList,\n    IonItem,\n    IonLabel,\n    IonInput,\n    IonButton,\n    IonPage\n  } from \"@ionic/react\";\nimport App from '../App';\n\nconst {LocalNotifications} = Plugins;\n\nconst lats = [37.7313933, 37.7413933, 37.7413933]\nconst LocationPin = () => (\n<div>\n  <SimpleMarker name=\"My Marker\" color=\"blue\"/>\n  <p>1</p>\n</div>\n\n)\n\nclass Tab1 extends Component  {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mapsLoaded: false,     \n            latitude:38,\n            longitude:-118,\n            map: {},\n            mapsApi: {},\n            markers: [],\n            searchResults: [],\n            placesService: {},\n            geoCoderService: {},\n            directionService: {},\n            testing_site_locations: [], // array of {lat: number, lng: number}\n            siteLat0: 38,\n            siteLat1: 38, \n            siteLat2: 38,\n            siteLat3: 38,\n            siteLat4: 38,\n            siteLng0: -118,\n            siteLng1: -118,\n            siteLng2: -118,\n            siteLng3: -118,\n            siteLng4: -118,\n        };\n        this.initNotif();\n    }\n\n    async initNotif(){\n      await LocalNotifications.requestPermission();\n    }\n\n    apiHasLoaded = ((map, mapsApi) => {\n        this.setState({\n          mapsLoaded: true,\n          map: map,\n          mapsApi: mapsApi,\n          placesService: new mapsApi.places.PlacesService(map),\n          geoCoderService: new mapsApi.Geocoder(),\n          directionService: new mapsApi.DirectionsService(),\n        });\n    });\n    \n\n    handleSearch = (() => {\n      if (this.state.map === {}){\n        return\n      }\n      \n      // console.log(this.state.mapsApi);\n      // console.log(this.state.map);\n      // console.log(this.state.placesService);\n      // console.log(this.state.latitude, this.state.longitude);\n        let {markers, placesService, directionService,mapsApi } = this.state;\n        const filteredResults = [];\n        const testing_site_latlng_array = [];\n        //if (markers.length === 0){\n        //  console.log(\"add marker and try again\");\n        //  return;\n        //}\n        const markerLatLng = new mapsApi.LatLng(this.state.latitude, this.state.longitude);\n        const placesRequest = {\n              location: markerLatLng,\n              //radius: '3000000', // Cannot be used with rankBy. Pick your poison!\n              type: ['hospital', 'pharmacy','doctor'], // List of types: https://developers.google.com/places/supported_types\n              query: 'covid 19 testing site',\n              rankBy: mapsApi.places.RankBy.DISTANCE,\n          }\n          //console.log(placesRequest);\n          placesService.textSearch(placesRequest, ((response) => {\n              //console.log(response.length)\n              let responseLimit = Math.min(5, response.length);\n              for (let i = 0; i < responseLimit; i++) {\n                  const covidTesting = response[i];\n                  const { rating, name } = covidTesting;\n                  const address = covidTesting.formatted_address; \n                  const lat = covidTesting.geometry.location.lat();\n                  const lng = covidTesting.geometry.location.lng();\n                  let openNow = false;\n                  if (covidTesting.opening_hours) {\n                      openNow = covidTesting.opening_hours.isOpen(); // e.g true/false\n                  }\n                  //console.log(name,address, openNow);\n                  filteredResults.push({\n                    name,\n                    address,\n                    rating,\n                    lat, \n                    lng,\n                    openNow,\n                  });\n                  this.setState({ searchResults: filteredResults });\n              }\n              //console.log(this.state.searchResults);  \n\n              this.setState({siteLat0: this.state.searchResults[0].lat})\n              this.setState({siteLng0: this.state.searchResults[0].lng})\n\n              this.setState({siteLat1: this.state.searchResults[1].lat})\n              this.setState({siteLng1: this.state.searchResults[1].lng})\n\n              this.setState({siteLat2: this.state.searchResults[2].lat})\n              this.setState({siteLng2: this.state.searchResults[2].lng})\n\n              this.setState({siteLat3: this.state.searchResults[3].lat})\n              this.setState({siteLng3: this.state.searchResults[3].lng})\n\n              this.setState({siteLat4: this.state.searchResults[4].lat})\n              this.setState({siteLng4: this.state.searchResults[4].lng})\n              \n          }\n          ))\n    });\n    \n    async componentDidMount() {\n      await navigator.geolocation.getCurrentPosition(\n          position => {this.setState({ \n              latitude: position.coords.latitude, \n              longitude: position.coords.longitude\n          });\n          console.log('Position\\n', position);}\n      )\n\n      var id = navigator.geolocation.watchPosition(\n        (position) => {\n          const userLoc = {latitude:position.coords.latitude, longitude: position.coords.longitude};\n          console.log(\"Location\\n\", userLoc);\n          const db = firebase.firestore().collection('users');\n          const user = firebase.auth().currentUser;\n          var user_id = '';\n          if (user!=null){\n            user_id = user.uid.toString();\n            db.doc(user_id).update({'location': userLoc});\n            this.nearPositive(userLoc);\n          }\n        }, \n        (err)=>{\n          if(err.code == 1) {\n            console.log(\"Error: Access is denied!\");\n          } else if( err.code == 2) {\n            console.log(\"Error: Position is unavailable!\");\n          }\n        }, \n        { enableHighAccuracy:true ,timeout: 60000, maximumAge:30000}\n      );\n    }\n\n    //if user is near positive user, will send local alert\n    nearPositive(location){\n      const all_usrs = firebase.firestore().collection('users');\n      let close_usrs = all_usrs.where(location, '!=', {}).get();\n      console.log('close_usr', close_usrs);\n      //alert(\"Num people\", close_usrs.length);\n      if(close_usrs != {}){\n        this.notify();\n      }\n    }\n\n\n    async notify(){\n      await LocalNotifications.schedule({\n        notifications:[{\n          title: 'Covid Proximity!',\n          body: 'There is a Covid positive user near your location!',\n          id: 1,\n          sound: null,\n          iconColor: '#0000FF'\n          }\n        ]\n      });\n    }\n\n    distance(lon1, lat1, lon2, lat2) {\n      var R = 6371; // Radius of the earth in km\n      var dLat = (lat2-lat1).toRad();  // Javascript functions in radians\n      var dLon = (lon2-lon1).toRad(); \n      var a = Math.sin(dLat/2) * Math.sin(dLat/2) +\n              Math.cos(lat1.toRad()) * Math.cos(lat2.toRad()) * \n              Math.sin(dLon/2) * Math.sin(dLon/2); \n      var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \n      var d = R * c; // Distance in km\n      return d;\n    }\n    \n    \n    \n\n\n\n\n      //<IonButton color=\"primary\" onClick={this.getLocation}>{this.state.longitude ? `${this.state.latitude} ${this.state.longitude}` : \"Get Location\"}</IonButton>\n      render(){\n\n      //const { constraints, mapsLoaded, singaporeLatLng, markers, searchResults } = this.state;\n      const { markers, geoCoderService,searchResults } = this.state; // Google Maps Services\n      return(\n              <IonPage>\n\n                      {/* \n              <IonHeader>\n                <IonToolbar color=\"primary\">\n                  <IonTitle>Login</IonTitle>\n                </IonToolbar>\n              </IonHeader>\n                        */}\n\n              <IonContent>\n              <div>Current Location: {JSON.stringify(this.state.latitude  )} ,  {JSON.stringify(this.state.longitude )}</div> \n              <div>Initial Location: {JSON.stringify(this.state.latitude )} ,  {JSON.stringify(this.state.longitude)}</div>               \n{/*************** Maps Section ******************************************************************************/}              \n            <div className=\"google-map\">\n            <GoogleMapReact\n              bootstrapURLKeys={{\n                key: \"AIzaSyBj9b-EHxuAAihd8u2HBBqWOSXukFlA3jY\",\n                libraries: ['places', 'directions']\n              }}\n              defaultZoom={12}\n              defaultCenter={{ lat: 38, lng: -118 }}\n              center={{ lat: this.state.latitude, lng: this.state.longitude }}\n              yesIWantToUseGoogleMapApiInternals={true}\n              yesIWantToUseGoogleMapApiInternals\n              onGoogleApiLoaded={({ map, maps }) => this.apiHasLoaded(map, maps)} // \"maps\" is the mapApi. Bad naming but that's their library.\n\n            >\n\n             <Marker lat={this.state.latitude} lng={this.state.longitude} name=\"My Marker\" color=\"blue\"/>\n             <SimpleMarker lat={this.state.siteLat0} lng={this.state.siteLng0} name=\"My Marker\" color=\"red\"/>\n             <SimpleMarker lat={this.state.siteLat1} lng={this.state.siteLng1} name=\"My Marker\" color=\"red\"/>\n             <SimpleMarker lat={this.state.siteLat2} lng={this.state.siteLng2} name=\"My Marker\" color=\"red\"/>\n             <SimpleMarker lat={this.state.siteLat3} lng={this.state.siteLng3} name=\"My Marker\" color=\"red\"/>\n             <SimpleMarker lat={this.state.siteLat4} lng={this.state.siteLng4} name=\"My Marker\" color=\"red\"/>\n\n\n\n               </GoogleMapReact>\n               </div>\n\n\n{/*************** Search Button ******************************************************************************/}           \n              <IonButton color=\"primary\" onClick={this.handleSearch}> {\"search\"}  </IonButton> \n\n\n{/*************** Result Section ******************************************************************************/}\n            {searchResults.length > 0 ? \n               <>\n\n        <section className=\"col-12\">\n        <div className=\"d-flex flex-column justify-content-center\">\n\n                <h1 className=\"mb-4 fw-md\">Testing Center Nearby</h1>\n\n                   <div className=\"d-flex flex-wrap\">\n                      {searchResults.map((result, key) => (<PlaceCard info={result} key={key} />))}\n                  </div>\n\n        </div>                        \n        </section>               \n               </>\n               : null}\n\n                </IonContent>\n                </IonPage>\n            );\n      }\n    \n  };\n  \n  \n  \n  \n  export default Tab1;"]},"metadata":{},"sourceType":"module"}